Usual Arithmetic Conversions

Many operators that expect operands of arithmetic type cause conversions and yield result types in a similar way. The purpose is to determine a common real type for the operands and result. For the specified operands, each operand is converted, without change of type domain, to a type whose corresponding real type is the common real type. Unless explicitly stated otherwise, the common real type is alo the corresponding real type of the result, whose type domain is the type domian of the operands if they are the same, and complex otherwise. This pattern is called the usual arithmetic convresions:

    First, if the corresponding real type of either operand is long double, the other operand is converted, without change of type domain, to a type whose coresponding real type is long double.

    Otherwise, if the corresponding real type of either operand is double, the other operand is converted, without change of type domain, to a type whose coreesponding real type is double.

    Otherwise, if the corresponding real type of either operand is float, the other operand is converted, without change of type domain, to a type whose coreesponding real type is float.

    Otherwise, the integer promotions are performed on both operands. Then the following rules are applied to the promoted operands:

        If both operands have the same type, then no further conversion is needed.

        Otherwise, if both operands have signed integer types or both have unsigned integer types, the operand with the type of lesser integer conversion rank is converted to the type of the operand with greater rank.

        Otherwise, if the operand that has unsigned integer type has rank greater or equal to the rank of the type of the other operand, then the operand with signed integer type is converted to the type of the operand with unsigned integer type.

        Otherwise, if the type of the operand with signed integer type can represent all of the values of the type of the operand with unsigned integer type, then the operand with unsigned integer type is converted to the type of the operand with signed integer type.

        Otherwise, both operands are converted to the unsigned integer type corresponding to the type of the operand with signed integer type.

    The values of floating operands and of the results of floating expressions may be represented in greater precision and range than that required by the type; the types are not changed thereby.
